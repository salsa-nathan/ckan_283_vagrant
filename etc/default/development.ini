#
# CKAN - Pylons configuration
#
# These are some of the configuration options available for your CKAN
# instance. Check the documentation in 'doc/configuration.rst' or at the
# following URL for a description of what they do and the full list of
# available options:
#
# http://docs.ckan.org/en/latest/maintaining/configuration.html
#
# The %(here)s variable will be replaced with the parent directory of this file
#

[DEFAULT]

# WARNING: *THIS SETTING MUST BE SET TO FALSE ON A PRODUCTION ENVIRONMENT*
debug = true

[server:main]
use = egg:Paste#http
host = 0.0.0.0
port = 5000

[app:main]
use = egg:ckan
full_stack = true
cache_dir = /tmp/%(ckan.site_id)s/
beaker.session.key = ckan

# This is the secret token that the beaker library uses to hash the cookie sent
# to the client. `paster make-config` generates a unique value for this each
# time it generates a config file.
beaker.session.secret = bSmgPpaxg2M+ZRes3u1TXwIcE

# `paster make-config` generates a unique value for this each time it generates
# a config file.
app_instance_uuid = 6e3daf8e-1c6b-443b-911f-c7ab4c5f9605

# repoze.who config
who.config_file = %(here)s/who.ini
who.log_level = warning
who.log_file = %(cache_dir)s/who_log.ini
# Session timeout (user logged out after period of inactivity, in seconds).
# Inactive by default, so the session doesn't expire.
# who.timeout = 86400

## Database Settings
sqlalchemy.url = postgresql://ckan_default:ckan_default@localhost/ckan_default

ckan.datastore.write_url = postgresql://ckan_default:ckan_default@localhost/datastore_default
ckan.datastore.read_url = postgresql://datastore_default:datastore_default@localhost/datastore_default

# PostgreSQL' full-text search parameters
ckan.datastore.default_fts_lang = english
ckan.datastore.default_fts_index_method = gist

## Site Settings

ckan.site_url =http://dataqld.loc:5000 
#ckan.use_pylons_response_cleanup_middleware = true

## Authorization Settings

ckan.auth.anon_create_dataset = false
ckan.auth.create_unowned_dataset = false
ckan.auth.create_dataset_if_not_in_organization = false
ckan.auth.user_create_groups = false
ckan.auth.user_create_organizations = false
ckan.auth.user_delete_groups = true
ckan.auth.user_delete_organizations = true
ckan.auth.create_user_via_api = false
ckan.auth.create_user_via_web = true
ckan.auth.roles_that_cascade_to_sub_groups = admin


## Search Settings

ckan.site_id = default
solr_url = http://127.0.0.1:8983/solr


## Redis Settings

# URL to your Redis instance, including the database to be used.
#ckan.redis.url = redis://localhost:6379/0


## CORS Settings

# If cors.origin_allow_all is true, all origins are allowed.
# If false, the cors.origin_whitelist is used.
# ckan.cors.origin_allow_all = true
# cors.origin_whitelist is a space separated list of allowed domains.
# ckan.cors.origin_whitelist = http://example1.com http://example2.com


## Plugins Settings

# Note: Add ``datastore`` to enable the CKAN DataStore
#       Add ``datapusher`` to enable DataPusher
#		Add ``resource_proxy`` to enable resorce proxying and get around the
#		same origin policy
ckan.plugins = stats text_view image_view recline_view data_qld_theme datarequests odi_certificates dcat structured_data data_qld scheming_datasets validation datastore data_qld_google_analytics ytp_comments
# Disable `qgovext` extension locally because anti_csrf filter requires https:// URL
#qgovext

# Define which views should be created by default
# (plugins must be loaded in ckan.plugins)
ckan.views.default_views = image_view text_view recline_view

# Customize which text formats the text_view plugin will show
#ckan.preview.json_formats = json
#ckan.preview.xml_formats = xml rdf rdf+xml owl+xml atom rss
#ckan.preview.text_formats = text plain text/plain

# Customize which image formats the image_view plugin will show
#ckan.preview.image_formats = png jpeg jpg gif

## Front-End Settings
ckan.site_title = CKAN
ckan.site_logo = /base/images/ckan-logo.png
ckan.site_description =
ckan.favicon = /base/images/ckan.ico
ckan.gravatar_default = identicon
ckan.preview.direct = png jpg gif
ckan.preview.loadable = html htm rdf+xml owl+xml xml n3 n-triples turtle plain atom csv tsv rss txt json
ckan.display_timezone = server

# package_hide_extras = for_search_index_only
#package_edit_return_url = http://another.frontend/dataset/<NAME>
#package_new_return_url = http://another.frontend/dataset/<NAME>
#ckan.recaptcha.version = 1
#ckan.recaptcha.publickey =
#ckan.recaptcha.privatekey =
#licenses_group_url = http://licenses.opendefinition.org/licenses/groups/ckan.json
# ckan.template_footer_end =


## Internationalisation Settings
ckan.locale_default = en_AU
ckan.locale_order = en pt_BR ja it cs_CZ ca es fr el sv sr sr@latin no sk fi ru de pl nl bg ko_KR hu sa sl lv
ckan.locales_offered =
ckan.locales_filtered_out = en_AU

## Feeds Settings

ckan.feeds.authority_name =
ckan.feeds.date =
ckan.feeds.author_name =
ckan.feeds.author_link =

## Storage Settings

ckan.storage_path = /var/lib/ckan
#ckan.max_resource_size = 10
#ckan.max_image_size = 2

## Datapusher settings

# Make sure you have set up the DataStore

#ckan.datapusher.formats = csv xls xlsx tsv application/csv application/vnd.ms-excel application/vnd.openxmlformats-officedocument.spreadsheetml.sheet
#ckan.datapusher.url = http://127.0.0.1:8800/
#ckan.datapusher.assume_task_stale_after = 3600

# Resource Proxy settings
# Preview size limit, default: 1MB
#ckan.resource_proxy.max_file_size = 1048576
# Size of chunks to read/write.
#ckan.resource_proxy.chunk_size = 4096

## Activity Streams Settings

#ckan.activity_streams_enabled = true
ckan.activity_list_limit = 31
#ckan.activity_streams_email_notifications = true
#ckan.email_notifications_since = 2 days
ckan.hide_activity_from_users = %(ckan.site_id)s

## Custom Config Settings

# ODI config settings
# The odi api certificate base url to search for certificates
ckan.odi_certificates.certificate_base_url = https://certificates.theodi.org/en/datasets?
# The odi api query parameters used to search for the certificate img. JSON object gets converted to HTML query parameters e.g. datasetUrl=https://datasetUrl&type=badge&format=png
ckan.odi_certificates.certificate_img_query_parameters = {"datasetUrl":"", "format":"png", "type":"badge"}
# The odi api query parameters used to for the certificate link to the ODI certificate website. JSON object gets converted to HTML query parameters e.g. datasetUrl=https://datasetUrl
ckan.odi_certificates.certificate_link_query_parameters = {"datasetUrl":""}
# The dataset base url of the CKAN instance
ckan.odi_certificates.dataset_base_url = https://data.qld.gov.au

## Email settings

#email_to = admin@domain.com
#error_email_from = ckan-errors@example.com
#smtp.server = localhost
#smtp.starttls = False
#smtp.user =
#smtp.password =
smtp.mail_from = no-reply@training.data.qld.gov.au

## ckanext-scheming settings
#   module-path:file to schemas being used
scheming.dataset_schemas = ckanext.data_qld:ckan_dataset.json
#   will try to load "spatialx_schema.json" and "spatialxy_schema.json"
#   as dataset schemas
#
#   URLs may also be used, e.g:
#
# scheming.dataset_schemas = http://example.com/spatialx_schema.json

#   Preset files may be included as well. The default preset setting is:
scheming.presets = ckanext.scheming:presets.json ckanext.data_qld:presets.json

#   The is_fallback setting may be changed as well. Defaults to false:
scheming.dataset_fallback = false

## ckanext-datarequests settings
# Enable or disable the comments system by setting up the ckan.datarequests.comments property in the configuration file (by default, the comments system is enabled).
ckan.datarequests.comments = true
# Enable or disable a badge to show the number of data requests in the menu by setting up the ckan.datarequests.show_datarequests_badge property in the configuration file (by default, the badge is not shown).
ckan.datarequests.show_datarequests_badge = true
# Enable or disable description as a required field on data request forms
ckan.datarequests.description_required = true
# Default organisation used for new data requests
ckan.datarequests.default_organisation = open-data-administration-data-requests

# `ckan-ex-qgov` extension settings

urlm.app_path = https://www.404redirect.qld.gov.au/services/url
urlm.proxy = proxy:3128
feedback_form_recipients = myemail@gmail.com,otheremail@gov.au
feedback_redirection = /article/thanks
extra_public_paths = /srv/data/public
extra_template_paths = /srv/data/templates

# ckanext-google-tag-manager
ckan.google_tag_manager.gtm_container_id = GTM-NBSWN3

# ckanext-data_qld_googleanalytics
# ckan.data_qld_googleanalytics.id =
ckan.data_qld_googleanalytics.collection_url = http://www.google-analytics.com/collect

### ckanext-validation
##Use the following configuration options to choose the operation modes:
ckanext.validation.run_on_create_async = True 
ckanext.validation.run_on_update_async = True
ckanext.validation.run_on_create_sync = False
ckanext.validation.run_on_update_sync = False
##Formats to validate
##By default validation will be run agaisnt the following formats: CSV, XLSX and XLS. You can modify these formats using the following option:
ckanext.validation.formats = csv xlsx xls
##You can also provide validation options that will be used by default when running the validation:


# YTP Comments
ckan.comments.moderation = False
ckan.comments.moderation.first_only = False
ckan.comments.threaded_comments = True
ckan.comments.users_can_edit = False
ckan.comments.check_for_profanity = True
ckan.comments.bad_words_file = /usr/lib/ckan/default/src/ckanext-ytp-comments/ckanext/ytp/comments/bad_words.txt
ckan.comments.follow_mute_enabled = True

## Logging configuration
[loggers]
keys = root, ckan, ckanext

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = WARNING
handlers = console

[logger_ckan]
level = INFO
handlers = console
qualname = ckan
propagate = 0

[logger_ckanext]
level = DEBUG
handlers = console
qualname = ckanext
propagate = 0

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(asctime)s %(levelname)-5.5s [%(name)s] %(message)s
